openapi: 3.0.2
info:
  title: TodoList OpenAPI
  version: 1.0.0
  description: "API for all things \u2026"
paths:
  /api/tasks/:
    get:
      operationId: listTodoLists
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: is_completed
        required: false
        in: query
        description: is_completed
        schema:
          type: string
      - name: title
        required: false
        in: query
        description: title
        schema:
          type: string
      - name: is_active
        required: false
        in: query
        description: is_active
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/TodoList'
          description: ''
      tags:
      - TodoList Tasks
    post:
      operationId: createTodoList
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TodoList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TodoList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TodoList'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoList'
          description: ''
      tags:
      - TodoList Tasks
  /api/tasks/{id}/:
    get:
      operationId: retrieveTodoList
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this todo list.
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: is_completed
        required: false
        in: query
        description: is_completed
        schema:
          type: string
      - name: title
        required: false
        in: query
        description: title
        schema:
          type: string
      - name: is_active
        required: false
        in: query
        description: is_active
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoList'
          description: ''
      tags:
      - TodoList Tasks
    put:
      operationId: updateTodoList
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this todo list.
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: is_completed
        required: false
        in: query
        description: is_completed
        schema:
          type: string
      - name: title
        required: false
        in: query
        description: title
        schema:
          type: string
      - name: is_active
        required: false
        in: query
        description: is_active
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TodoList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TodoList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TodoList'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoList'
          description: ''
      tags:
      - TodoList Tasks
    patch:
      operationId: partialUpdateTodoList
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this todo list.
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: is_completed
        required: false
        in: query
        description: is_completed
        schema:
          type: string
      - name: title
        required: false
        in: query
        description: title
        schema:
          type: string
      - name: is_active
        required: false
        in: query
        description: is_active
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TodoList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TodoList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TodoList'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoList'
          description: ''
      tags:
      - TodoList Tasks
    delete:
      operationId: destroyTodoList
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this todo list.
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: is_completed
        required: false
        in: query
        description: is_completed
        schema:
          type: string
      - name: title
        required: false
        in: query
        description: title
        schema:
          type: string
      - name: is_active
        required: false
        in: query
        description: is_active
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - TodoList Tasks
  /api/categories/:
    get:
      operationId: listCategorys
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: title
        required: false
        in: query
        description: title
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Categories'
          description: ''
      tags:
      - api
    post:
      operationId: createCategory
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Categories'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Categories'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Categories'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Categories'
          description: ''
      tags:
      - api
  /api/categories/{id}/:
    get:
      operationId: retrieveCategory
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u041A\u0430\u0442\u0435\
          \u0433\u043E\u0440\u0438\u044F."
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: title
        required: false
        in: query
        description: title
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Categories'
          description: ''
      tags:
      - api
    put:
      operationId: updateCategory
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u041A\u0430\u0442\u0435\
          \u0433\u043E\u0440\u0438\u044F."
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: title
        required: false
        in: query
        description: title
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Categories'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Categories'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Categories'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Categories'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateCategory
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u041A\u0430\u0442\u0435\
          \u0433\u043E\u0440\u0438\u044F."
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: title
        required: false
        in: query
        description: title
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Categories'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Categories'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Categories'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Categories'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyCategory
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u041A\u0430\u0442\u0435\
          \u0433\u043E\u0440\u0438\u044F."
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      - name: title
        required: false
        in: query
        description: title
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
components:
  schemas:
    TodoList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 140
        time_begin:
          type: string
          format: date-time
          readOnly: true
        time_end:
          type: string
          format: date-time
          nullable: true
        is_completed:
          type: boolean
        cat:
          type: integer
      required:
      - name
    Categories:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 140
      required:
      - name
